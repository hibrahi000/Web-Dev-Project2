{"ast":null,"code":"var _jsxFileName = \"/Users/hashmatibrahimi/workspace/School Code/WebsDev/Web-Dev-Project2/app/src/components/Form/ContactForm/ContactForm.js\";\nimport React, { Component } from 'react';\nimport Style from './ContactForm.module.css';\nimport Heading from '../FormComponents/Heading/Heading';\nimport GenInput from '../FormComponents/Inputs/GenInput/GenInput';\nimport TextArea from '../FormComponents/Inputs/TextArea/TextArea';\nimport SendMessageBtn from '../FormComponents/Buttons/SendMessageBtn/SendMessageBtn';\n\nclass ContactForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Heading: {\n        Title: 'Contact Us',\n        Message: 'Got a Question? We would love to hear from you. Send us a message and we will respond as soon as possible.'\n      },\n      FormSubmitted: false,\n      FormSubmitValid: true,\n      NameValid: true,\n      EmailValid: true\n    };\n  }\n\n  submitionValidation(TextInput, inputType) {\n    TextInput.toUpperCase();\n    let nameValid = !TextInput.charAt(0).equals('') && !TextInput.charAt(0).equals(' ');\n    let emailValid = !TextInput.indexOf('@') == -1 && !TextInput.indexOf('.COM') == -1;\n    let res = {\n      valid: true,\n      source: 'null'\n    };\n\n    switch (inputType) {\n      case 'Name':\n        res.valid = nameValid;\n        res.source = 'Name Validation';\n        break;\n\n      case 'Email':\n        res.valid = emailValid;\n        res.source = 'Email Validation';\n        break;\n\n      default:\n        console.log('This must be used for name and email validation');\n        break;\n    }\n\n    return res;\n  }\n\n  render() {\n    let formBody = Style.formBody;\n    return React.createElement(\"div\", {\n      style: formBo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(Heading, {\n      Title: this.state.Heading.Title,\n      Message: this.state.Heading.Message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(GenInput, {\n      Lable: 'Name',\n      Error: this.state.NameValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(GenInput, {\n      Label: 'Email',\n      Error: this.state.EmailValid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(TextArea, {\n      Label: 'Message',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(SendMessageBtn, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/hashmatibrahimi/workspace/School Code/WebsDev/Web-Dev-Project2/app/src/components/Form/ContactForm/ContactForm.js"],"names":["React","Component","Style","Heading","GenInput","TextArea","SendMessageBtn","ContactForm","state","Title","Message","FormSubmitted","FormSubmitValid","NameValid","EmailValid","submitionValidation","TextInput","inputType","toUpperCase","nameValid","charAt","equals","emailValid","indexOf","res","valid","source","console","log","render","formBody","formBo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,QAAP,MAAqB,4CAArB;AACA,OAAOC,cAAP,MAA2B,yDAA3B;;AAEA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCO,KAFgC,GAEzB;AACHL,MAAAA,OAAO,EAAG;AACNM,QAAAA,KAAK,EAAG,YADF;AAENC,QAAAA,OAAO,EAAE;AAFH,OADP;AAKHC,MAAAA,aAAa,EAAG,KALb;AAMHC,MAAAA,eAAe,EAAG,IANf;AAOHC,MAAAA,SAAS,EAAG,IAPT;AAQHC,MAAAA,UAAU,EAAE;AART,KAFyB;AAAA;;AAchCC,EAAAA,mBAAmB,CAACC,SAAD,EAAWC,SAAX,EAAsB;AACrCD,IAAAA,SAAS,CAACE,WAAV;AACA,QAAIC,SAAS,GAAG,CAACH,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAoBC,MAApB,CAA2B,EAA3B,CAAD,IAAmC,CAACL,SAAS,CAACI,MAAV,CAAiB,CAAjB,EAAoBC,MAApB,CAA2B,GAA3B,CAApD;AACA,QAAIC,UAAU,GAAG,CAACN,SAAS,CAACO,OAAV,CAAkB,GAAlB,CAAD,IAA2B,CAAC,CAA5B,IAAiC,CAACP,SAAS,CAACO,OAAV,CAAkB,MAAlB,CAAD,IAA8B,CAAC,CAAjF;AACA,QAAIC,GAAG,GAAG;AAACC,MAAAA,KAAK,EAAG,IAAT;AAAeC,MAAAA,MAAM,EAAG;AAAxB,KAAV;;AACA,YAAOT,SAAP;AAEI,WAAK,MAAL;AACIO,QAAAA,GAAG,CAACC,KAAJ,GAAYN,SAAZ;AACAK,QAAAA,GAAG,CAACE,MAAJ,GAAa,iBAAb;AACA;;AAEJ,WAAK,OAAL;AACIF,QAAAA,GAAG,CAACC,KAAJ,GAAYH,UAAZ;AACAE,QAAAA,GAAG,CAACE,MAAJ,GAAY,kBAAZ;AACA;;AAEJ;AACIC,QAAAA,OAAO,CAACC,GAAR,CAAY,iDAAZ;AACA;AAdR;;AAgBA,WAAOJ,GAAP;AACH;;AAGDK,EAAAA,MAAM,GAAG;AAAA,QACAC,QADA,GACY5B,KADZ,CACA4B,QADA;AAGL,WACG;AAAK,MAAA,KAAK,EAAEC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAKvB,KAAL,CAAWL,OAAX,CAAmBM,KAAnC;AAA0C,MAAA,OAAO,EAAG,KAAKD,KAAL,CAAWL,OAAX,CAAmBO,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,EAEK,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAI,MAAnB;AAA2B,MAAA,KAAK,EAAG,KAAKF,KAAL,CAAWK,SAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFL,EAGK,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAI,OAAnB;AAA4B,MAAA,KAAK,EAAI,KAAKL,KAAL,CAAWM,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHL,EAIK,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAI,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJL,EAKK,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALL,CADH;AASH;;AAnD+B;;AAwDpC,eAAeP,WAAf","sourcesContent":["import React, { Component } from 'react'\nimport Style from './ContactForm.module.css';\nimport Heading from '../FormComponents/Heading/Heading';\nimport GenInput from '../FormComponents/Inputs/GenInput/GenInput';\nimport TextArea from '../FormComponents/Inputs/TextArea/TextArea';\nimport SendMessageBtn from '../FormComponents/Buttons/SendMessageBtn/SendMessageBtn'\n\nclass ContactForm extends Component {\n\n    state ={\n        Heading : {\n            Title : 'Contact Us',\n            Message: 'Got a Question? We would love to hear from you. Send us a message and we will respond as soon as possible.' \n        },\n        FormSubmitted : false,\n        FormSubmitValid : true,\n        NameValid : true,\n        EmailValid: true\n\n    }\n\n    submitionValidation(TextInput,inputType) {\n        TextInput.toUpperCase();\n        let nameValid = !TextInput.charAt(0).equals('') && !TextInput.charAt(0).equals(' ');\n        let emailValid = !TextInput.indexOf('@') == -1 && !TextInput.indexOf('.COM') == -1;\n        let res = {valid : true, source : 'null'};\n        switch(inputType){\n\n            case 'Name' :\n                res.valid = nameValid;\n                res.source = 'Name Validation'\n                break;\n\n            case 'Email':\n                res.valid = emailValid;\n                res.source= 'Email Validation';\n                break;\n\n            default :\n                console.log('This must be used for name and email validation');\n                break;\n        }\n        return res;\n    }\n\n\n    render() {\n        let {formBody} = Style;\n\n        return(\n           <div style={formBo}>\n                <Heading Title={this.state.Heading.Title} Message ={this.state.Heading.Message}/>\n                <GenInput Lable = {'Name'} Error ={this.state.NameValid}/>\n                <GenInput Label = {'Email'} Error = {this.state.EmailValid}/>\n                <TextArea Label = {'Message'} />\n                <SendMessageBtn />\n            </div>\n        )\n    }\n\n\n}\n\nexport default ContactForm;"]},"metadata":{},"sourceType":"module"}