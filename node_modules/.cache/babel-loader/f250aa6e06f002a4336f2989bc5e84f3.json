{"ast":null,"code":"var _jsxFileName = \"/Users/hashmatibrahimi/workspace/School Code/WebsDev/Web-Dev-Project2/app/src/components/CatagoryComponents/Modal/Modal.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Card from '../Card/Card';\nimport Chart from '../../Chart/Chart';\nimport ModalSpinner from '../../Spinner/ModalSpinner/ModalSpinner';\n\nclass modal extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      open: false,\n      allDeaths: [],\n      years: [],\n      numberOfYears: [],\n      numberOfDeaths: [],\n      totalDeaths: 0,\n      maleDeaths: 0,\n      femaleDeaths: 0,\n      selectedValue: 'Year',\n      loading: false\n    };\n\n    this.handleClickOpen = () => {\n      this.setState({\n        loading: true,\n        open: true\n      });\n      axios.get('https://data.cityofnewyork.us/api/views/jb7j-dtam/rows.json?accessType=DOWNLOAD', {}).then(res => {\n        this.setState({\n          allDeaths: [],\n          numberOfDeaths: [],\n          numberOfYears: [],\n          maleDeaths: 0,\n          femaleDeaths: 0\n        });\n        res.data.data.map(item => {\n          if (item.includes(this.props.causesOfDeath)) {\n            this.setState(prevState => ({\n              allDeaths: [...prevState.allDeaths, item]\n            }));\n          }\n        });\n        this.state.allDeaths.map(item => {\n          if (item[10] === \"M\" || item[10] === \"Male\") {\n            this.setState(prevState => ({\n              maleDeaths: prevState.maleDeaths + 1\n            }));\n          } else {\n            this.setState(prevState => ({\n              femaleDeaths: prevState.femaleDeaths + 1\n            }));\n          }\n        });\n        this.state.allDeaths.map(item => {\n          this.setState(prevState => ({\n            numberOfYears: [...prevState.numberOfYears, item[8]]\n          }));\n        });\n        this.state.years.map(year => {\n          this.setState(prevState => ({\n            numberOfDeaths: [...prevState.numberOfDeaths, this.state.numberOfYears.filter(y => y === year).length]\n          }));\n        });\n        setTimeout(() => {\n          this.setState({\n            loading: false\n          });\n        }, 2000);\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        open: false\n      });\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        selectedValue: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://data.cityofnewyork.us/api/views/jb7j-dtam/rows.json?accessType=DOWNLOAD', {}).then(res => {\n      res.data.meta.view.columns[8].cachedContents.top.map((item, index) => {\n        this.setState(prevState => ({\n          years: [...prevState.years, item.item]\n        }));\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    let modalContent = React.createElement(DialogContent, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(DialogContent, {\n      id: \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(Chart, {\n      years: this.state.years.sort(),\n      numberOfDeaths: this.state.numberOfDeaths,\n      maleDeaths: this.state.maleDeaths,\n      femaleDeaths: this.state.femaleDeaths,\n      totalDeaths: this.state.allDeaths.length,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(DialogContentText, {\n      id: \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Total Death: \", this.state.allDeaths.length), React.createElement(DialogContentText, {\n      id: \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Total Male Deaths: \", this.state.maleDeaths), React.createElement(DialogContentText, {\n      id: \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"Total Female Deaths: \", this.state.femaleDeaths)));\n\n    if (this.state.loading) {\n      modalContent = React.createElement(ModalSpinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Card, {\n      onClick: this.handleClickOpen,\n      image: this.props.image,\n      imageTitle: this.props.imageTitle,\n      title: this.props.title,\n      info: this.props.info,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Dialog, {\n      fullWidth: true,\n      open: this.state.open,\n      onClose: this.handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(DialogTitle, {\n      id: \"alert-dialog-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, this.props.causesOfDeath), modalContent, React.createElement(DialogActions, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleClose,\n      color: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nexport default modal;","map":{"version":3,"sources":["/Users/hashmatibrahimi/workspace/School Code/WebsDev/Web-Dev-Project2/app/src/components/CatagoryComponents/Modal/Modal.js"],"names":["React","axios","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","Card","Chart","ModalSpinner","modal","Component","state","open","allDeaths","years","numberOfYears","numberOfDeaths","totalDeaths","maleDeaths","femaleDeaths","selectedValue","loading","handleClickOpen","setState","get","then","res","data","map","item","includes","props","causesOfDeath","prevState","year","filter","y","length","setTimeout","catch","e","console","log","handleClose","handleChange","event","target","value","componentDidMount","meta","view","columns","cachedContents","top","index","render","modalContent","sort","image","imageTitle","title","info"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport Card from '../Card/Card'\nimport Chart from '../../Chart/Chart'\nimport ModalSpinner from '../../Spinner/ModalSpinner/ModalSpinner'\n\nclass modal extends React.Component {\n  state = {\n    open: false,\n    allDeaths: [],\n    years: [],\n    numberOfYears: [],\n    numberOfDeaths: [],\n    totalDeaths: 0,\n    maleDeaths: 0,\n    femaleDeaths: 0,\n    selectedValue: 'Year',\n    loading: false,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ loading: true, open: true });\n    axios.get('https://data.cityofnewyork.us/api/views/jb7j-dtam/rows.json?accessType=DOWNLOAD', {\n    }).then(res => {\n      this.setState({allDeaths: [], numberOfDeaths: [], numberOfYears: [], maleDeaths: 0, femaleDeaths: 0 })\n      res.data.data.map(item => {\n        if (item.includes(this.props.causesOfDeath)) {\n            this.setState(prevState => ({\n              allDeaths: [...prevState.allDeaths, item]\n            }))\n        }\n      })  \n      this.state.allDeaths.map(item => {\n        if (item[10] === \"M\" || item[10] === \"Male\") {\n          this.setState(prevState => ({\n            maleDeaths: prevState.maleDeaths + 1\n          }))\n        } else {\n          this.setState(prevState => ({\n            femaleDeaths: prevState.femaleDeaths + 1\n          }))\n        }\n      })\n      this.state.allDeaths.map(item => {\n        this.setState(prevState => ({\n          numberOfYears: [...prevState.numberOfYears, item[8]]\n        }))\n      })\n      this.state.years.map(year => {\n        this.setState(prevState => ({\n          numberOfDeaths: [...prevState.numberOfDeaths, this.state.numberOfYears.filter(y => y === year).length]\n        }))\n      })\n      setTimeout(() => {\n        this.setState({ loading: false })\n      }, 2000)\n    }).catch(e => {\n        console.log(e)\n    })\n  };\n\n  componentDidMount() {\n    axios.get('https://data.cityofnewyork.us/api/views/jb7j-dtam/rows.json?accessType=DOWNLOAD', {\n    }).then(res => {\n        res.data.meta.view.columns[8].cachedContents.top.map((item, index) => {\n            this.setState(prevState => ({\n                years: [...prevState.years, item.item]\n            }))\n        })\n    }).catch(e => {\n        console.log(e)\n    })\n  }\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleChange = event => {\n    this.setState({ selectedValue: event.target.value });\n  };\n\n  render() {\n\n    let modalContent = <DialogContent>\n    <DialogContent id=\"alert-dialog-description\">\n      <Chart \n      years={this.state.years.sort()}\n      numberOfDeaths={this.state.numberOfDeaths}\n      maleDeaths={this.state.maleDeaths}\n      femaleDeaths={this.state.femaleDeaths}\n      totalDeaths={this.state.allDeaths.length}\n      />\n      <DialogContentText id=\"alert-dialog-description\">\n      Total Death: {this.state.allDeaths.length}\n    </DialogContentText> \n    <DialogContentText id=\"alert-dialog-description\">\n      Total Male Deaths: {this.state.maleDeaths}\n    </DialogContentText> \n    <DialogContentText id=\"alert-dialog-description\"> \n      Total Female Deaths: {this.state.femaleDeaths}\n    </DialogContentText> \n    </DialogContent>\n  </DialogContent>\n\n    if (this.state.loading) {\n      modalContent = <ModalSpinner />\n    }\n\n    return (\n      <div>\n        <Card \n        onClick={this.handleClickOpen}\n        image={this.props.image}\n        imageTitle={this.props.imageTitle}\n        title={this.props.title}\n        info={this.props.info}/>\n        <Dialog\n          fullWidth\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{this.props.causesOfDeath}</DialogTitle>\n            {modalContent}\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              Close\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nexport default modal;"]},"metadata":{},"sourceType":"module"}