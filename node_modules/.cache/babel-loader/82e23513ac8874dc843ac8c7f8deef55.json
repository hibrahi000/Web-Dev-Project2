{"ast":null,"code":"var _jsxFileName = \"/Users/hashmatibrahimi/workspace/School Code/WebsDev/Web-Dev-Project2/app/src/components/Form/FormComponents/Inputs/GenInput/GenInput.js\";\nimport React, { Component } from 'react';\nimport Style from './GenInput.module.css';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\nclass GenInput extends Component {\n  render() {\n    let _this$props = this.props,\n        Label = _this$props.Label,\n        Error = _this$props.Error;\n    let inputSpacing = Style.inputSpacing;\n    let input;\n\n    if (Error) {\n      input = React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: Label,\n        error: Error,\n        spellCheck: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }), React.createElement(FormHelperText, {\n        variant: \"outlined\",\n        id: \"component-error-text\",\n        error: Error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, Label));\n    } else {\n      React.createElement(FormControl, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        label: Label,\n        error: Error,\n        spellCheck: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      className: inputSpacing,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, input);\n  }\n\n}\n\nexport default GenInput;","map":{"version":3,"sources":["/Users/hashmatibrahimi/workspace/School Code/WebsDev/Web-Dev-Project2/app/src/components/Form/FormComponents/Inputs/GenInput/GenInput.js"],"names":["React","Component","Style","TextField","FormControl","FormHelperText","GenInput","render","props","Label","Error","inputSpacing","input"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;AACA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAE7BM,EAAAA,MAAM,GAAE;AAAA,sBACa,KAAKC,KADlB;AAAA,QACHC,KADG,eACHA,KADG;AAAA,QACIC,KADJ,eACIA,KADJ;AAAA,QAEHC,YAFG,GAEaT,KAFb,CAEHS,YAFG;AAIJ,QAAIC,KAAJ;;AACA,QAAGF,KAAH,EAAS;AACLE,MAAAA,KAAK,GACD,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEH,KAAlB;AAAyB,QAAA,KAAK,EAAEC,KAAhC;AAAuC,QAAA,UAAU,EAAE,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,cAAD;AAAgB,QAAA,OAAO,EAAC,UAAxB;AAAmC,QAAA,EAAE,EAAC,sBAAtC;AAA6D,QAAA,KAAK,EAAEA,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4ED,KAA5E,CAFA,CADJ;AAOH,KARD,MASI;AACA,0BAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAEA,KAAlB;AAAyB,QAAA,KAAK,EAAEC,KAAhC;AAAuC,QAAA,UAAU,EAAE,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA;AAIH;;AAID,WACI;AAAK,MAAA,SAAS,EAAEC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKC,KADL,CADJ;AAKH;;AA9B4B;;AAiCjC,eAAeN,QAAf","sourcesContent":["import React,{ Component } from 'react'\nimport Style from './GenInput.module.css';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nclass GenInput extends Component {\n\n    render(){\n    let {Label, Error} = this.props;\n    let {inputSpacing} = Style;\n\n        let input;\n        if(Error){\n            input= (\n                <FormControl>\n                <TextField label={Label} error={Error} spellCheck={true}></TextField>\n                <FormHelperText variant='outlined' id=\"component-error-text\" error={Error}>{Label}</FormHelperText>\n    \n                </FormControl>\n            )\n        }\n        else{\n            <FormControl>\n            <TextField label={Label} error={Error} spellCheck={true}></TextField>\n\n            </FormControl>\n        }\n\n\n\n        return(\n            <div className={inputSpacing}>\n                {input}\n            </div>\n        )\n    }\n}\n\nexport default GenInput;"]},"metadata":{},"sourceType":"module"}